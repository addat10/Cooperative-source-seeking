% This file is part of a library for simulation of multi-agent systems% developed at the Institute of Control Systems at TUHH.%% Original Authors: Christian Hespe <christian.hespe@tuhh.de>%                   Daniel Duecker <daniel.duecker@tuhh.de>function tau = attitude_controller(K_p, K_d, x, r)%ATTITUDE_CONTROLLER Static attitude controller for the HippoCampus%   This function implements a static PD controller for the HippoCampus%   model. It is based on calculating the orientation error in the special%   orthogonal group SO(3).%%   For details see:%%   D. Mellinger and V. Kumar. Minimum Snap Trajectory Generation and%   Control for Quadrotors. ICRA, 2011%%   D.-A. Duecker, A. Hackbarth, T. Johannink, E. Kreuzer, and E. Solowjow. %   Micro Underwater Vehicle Hydrobatics: A Submerged Furuta Pendulum.%   ICRA 2018%% Transform attitude into SO(3)Phi     = x(1:3);Phi_des = r(1:3);R       = R_euler(Phi);R_des   = R_euler(Phi_des);%% Compute control errors% Compute attitude error on SO(3)e_R = 0.5*(R_des'*R - R'*R_des);% Extract the skew-symmetric part of the rotation error matrix as a vectore_R_vec = [e_R(3,2); e_R(1,3); e_R(2,1)]; % Compute the error in the angular velocitiesomega     = x(4:6);omega_des = r(4:6);e_omega   = omega - omega_des;%% Compute controller output% Apply gains given as parameterstau = - K_p * e_R_vec - K_d * e_omega;endfunction R = R_euler(Phi)%R_EULER Function that maps the Z-Y-X Euler angles to the corresponding%rotation matrixphi = Phi(1); theta = Phi(2); psi = Phi(3);R = [  cos(psi)*cos(theta)  cos(psi)*sin(theta)*sin(phi)-sin(psi)*cos(phi)  cos(psi)*cos(phi)*sin(theta)+sin(psi)*sin(phi) ;       sin(psi)*cos(theta)  sin(psi)*sin(theta)*sin(phi)+cos(psi)*cos(phi)  sin(psi)*cos(phi)*sin(theta)-cos(psi)*sin(phi) ;      -sin(theta)           cos(theta)*sin(phi)                             cos(theta)*cos(phi)                            ];end